/*
    This is an example pipeline that implement full CI/CD for a simple static web site packed in a Docker image.
    The pipeline is made up of 6 main steps
    1. Git clone and setup
    2. Build and local tests
    3. Publish Docker and Helm
    4. Deploy to dev and test
    5. Deploy to staging and test
    6. Optionally deploy to production and test
 */


/*
    Create the kubernetes namespace
 */
def createNamespace (name) {
    echo "Creating namespace ${name} if needed"
    sh "kubectl create namespace ${name} --dry-run -o yaml | kubectl apply -f -"
    echo "${name} namespace created"
}

node {

    stage('Clone repository') {
        /* Cloning the Repository to our Workspace */
        checkout scm
    }

    stage('Setup') {
        // Setup gcloud service account access
        sh "gcloud auth activate-service-account --key-file=${env.terraform-sa}"
        sh "gcloud config set core/project ${env.PROJECT_ID}"
        sh "gcloud config set container/cluster ${env.CLUSTER_NAME}"
        sh "gcloud config set compute/region ${env.REGION}"

        sh "gcloud container clusters get-credentials ${env.CLUSTER_NAME} --region=${env.REGION}"
    }

    try {
        stage ('helm test') {
                echo "$pwd"
                // helmDryrunAppPrereq ()
            }

        stage('Deploy AppPrereq'){
                createNamespace('monitoring') 
                // helmInstallAppPrereq ()
            } 
   
        }
        catch (Exception err){
            err_msg = "Test had Exception(${err})"
            currentBuild.result = 'FAILURE'
            error "FAILED - Stopping build for Error(${err_msg})"
    }
}

